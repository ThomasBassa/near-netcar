

TELNETING AND NETCATING

I couldn't get TelnetClient.py to work for me. Idk why.

With your python scripts, save what someone sends through Telnet into a variable. Telnet can be run from the command line on another computer. This information will eventually be the IP address of the M2 Rocket, so try sending the telnetting computer's IP address to the python program.

Put the python script on the Pi when you manage to do the above. Test that it runs on the Pi and try connecting (with telnet) from another computer while the program is running on the Pi. You will need to know the Pi's "10.X.X.X" IP address and the port that it listens on (4444).

When that works, put the python code you have that opens, listens, and saves the IP to a variable into the master file. It will be in a method that is run with a coroutine (I'm not sure)? Test how that works. Just get it so that there are no errors and that even with it running, the vehicle can drive just like it did on Wednesday. 

Then see what happens when you connect to the Pi using telnet from another computer while the vehicle is driving. 

There will be some holes in what I described above because I'm sure I haven't thought of everything yet. Also, remember that your testing can be done almost simultaneously with other vehicle testing.

As for the Rocket M2 part of this, I need to do more research, but if you want to look into it, you have to connect your computer to the M2 Rocket using the little black box connected to the blue and white ethernet cords. White goes to the rocket. Blue goes to your computer. Then ssh into it using "ssh ubnt@192.168.1.20 -p 222" from your terminal. You can explore the file system using "cd" and "ls" commands. try "sudo touch testFile" in different directories. Record which folders you are in that don't give you a "read-only directory" error. Or better yet, research how to get around that error. You can also look into Ash scripting. /bin/ contains all the commands you can run (it has telnet).



VEHICLE TESTING

I'm sure there's more testing that needs to be done to smooth out the vehicle's driving. That is important. Test test test test. Make sure you keep an eye on the temperature of the battery stick (assuming the battery stick isn't replaced by Monday). Also remember to test the LiPo's voltage frequently. If it gets below 11.5, we need to charge it probably. All 3 LiPos are in the LiPo safe bag downstairs. All three are fully charged. The red LiPo is for the remote. Make sure you don't switch red and black wires when you plug it into the remote control.

If you get the I2C error, it's coming from the servo driver (blue stick). There might be some partial connections between it and the T-shaped Pi connector or between the T-shaped Pi connector and the Pi. Jiggle things around until the error goes away or carefully disconnect one wire at a time (involved in the I2C) and reconnect it to see which connection is bad.



CODE STUFF

Make sure files are organized based on functionality. You guys know how to import files that are in the same directory and call methods written in those files. Implementing those initialization functions you guys wrote would be good. Determine what we need for error handling to be done properly. 



HARDWARE STUFF

You guys did a good job on Wednesday arranging everything. We should TRY to find an alternative to the ribbon cable and the T-shaped Pi thing. All the pins on the T-shaped Pi thing are exposed. That is bad. And the ribbon cable is far too long for what we're doing. Which is also bad. This alternative might involve a breakout board or it might involve a shorter cable.



EVERYTHING

Record all your tests in Excel and push code to github when you know it works.

We have time to add in additional functionality. We don't have Lidar, so we can't do anything there. It's possible we have something in our sensor box that will be usable. Ultrasonic probably won't be helpful because it is so short range. I can't find the GPS module at all. Please locate it if you can. GPS would be easy to implement without breaking anything!!!!! Which is great.

Do whatever you think needs to be done. This file just contains some ideas.

